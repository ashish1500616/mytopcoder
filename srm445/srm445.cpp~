
class TheEncryptionDivTwo{
public:
	string encrypt(string message)
	{
		map<char,char> m;
		int id=0;
		int n=sz(message);
		string res;
		for(int i=0;i<n;i++)
		{
			if(present(m,message[i])){
				res+=m[message[i]];
			}else{
				char nc='a'+id;
				debug(nc)
				id++;
				m[message[i]]=nc;
				res+=nc;
			}
		}
		return res;				
	}
};

class TheNewHouseDivTwo{
public:
	int count(vector<int> x,vector<int> y)
	{
		int m[200][200];
		int res=0;
		memset(m,0,sizeof(m));
		int minx,miny,maxx,maxy;
		minx=*min_element(all(x));
		maxx=*max_element(all(x));
		miny=*min_element(all(y));
		maxy=*max_element(all(y));
		int n=sz(x);
		for(int i=0;i<n;i++)
		{
			m[x[i]+100][y[i]+100]=1;
		}

		minx+=100;
		miny+=100;
		maxx+=100;
		maxy+=100;

		for(int nx=minx+1;nx<maxx;nx++)
		  for(int ny=miny+1;ny<maxy;ny++)
		  {
			  if(m[nx+1][ny]==1 && m[nx-1][ny]==1 && m[nx][ny+1]==1 && m[nx][ny-1]==1) res++;
		  }
		return res;
	}
};

