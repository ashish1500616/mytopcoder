int m[10005];

class SnowyWinter{
public:
	int snowyHighwayLength(vector <int> startPoints, vector <int> endPoints){
		memset(m,0,sizeof(m));
		int n=sz(startPoints);
		for(int i=0;i<n;i++)
		{
			int s=startPoints[i];
			int t=endPoints[i];
			for(int j=s;j<=s;j++)
			{
				if(m[j]==0)
				  m[j]=1;
			}
		}
		int res=0;
		for(int k=0;k<1005;k++)
		  res+=m[k];
		return res;
	}
};



class IsomorphicWords{
public:
	int countPairs(vector <string> words){
		int n=sz(words);
		int res=0;
		for(int i=0;i<n;i++)
		  for(int j=i+1;j<n;j++)
		  {
			  if(isomo(words[i],words[j])&&isomo(words[j],words[i]))
				res++;
		  }
		return res;
	}
	bool isomo(string str1,string str2)
	{
		if(sz(str1)!=sz(str2))return false;
		map<char,char> m;
		int n=sz(str1);
		for(int i=0;i<n;i++)
		{
			char s1=str1[i];
			char s2=str2[i];
			if(present(m,s1))
			{
				if(m[s1]!=s2)
				  return false;
			}else
			{
				m[s1]=s2;
			}
		}
		debug(str1)
		debug(str2)
		return true;
	}
};